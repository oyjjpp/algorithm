package toutiao

// 题目
// 有n个房间，将i号房间里的人重新分配;
// 分配规则：先让i号房间的人全部出来，接下来按照i+1，i+2，i+3, … 的顺序依次往这些房间里放一个人，
// n号房间的下一个房间是1号房间，直到所有人被重新分配。
// 已知分配完后每个房间的人数以及最后一个人被分配的房间号k，求出分配前每个房间的人数，数据保证一定有解，若有多解输出任意一个解

// 房间数目：n
// 最后一个分配的房间号：k
// 求解：分配之前每个房间的人数

// 输入描述
// 第一行两个整数n，x (2<= n <=10^5, 1<=x<=n)
// 代表房间数量一级最后一个人被分配的房间号
// 第二行 m个整数(0<=m<=10^9) 代表每个房间分配后的人数

// 输出描述
// 输出n个整数，每个房间分配之前的人数

// n 房间数量
// k 最后一个房间
// peopelNum 房间分配后的人数
// return 每个房间分配之前的人数
func findRoom(n, k int, peopelNum []int) {

}
